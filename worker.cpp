/**
  * Worker declaration file 
  * copyright: Michael Cueno @ 2013 (mcueno2)
  */

#include "worker.h"

/** Command line arguments: workerID sleepTime msgID shmID [ semID ]
* workerID: Unique identifier starting at 1 and increasing. Given by parent whom forked this worker
* sleepTime: time the workers will spend speeping in each work cycle, generated by parent randomly, given in descending order
* msgID/shmID/semID: id for message queue, shared memory block, and semaphore block respectively
*/
int main(int argc, char** argv){

	// Initializations 
	int workerID; int sleepTime; int msgID; int shmID; int semID;
	parse_input(argc, argv, &workerID, &sleepTime, &msgID, &shmID, &semID);

	// Part two 
	printf("Hi from child %d who has a sleep time of %d\n", workerID, sleepTime);
}

void parse_input(int argc, char** argv, int* workerId, int* sleepTime, int* msgID, int* shmID, int* semID){
	if(argc < 5 || argc > 6){
		fprintf(stderr, "%s", "input error in worker! Usage: workerID sleepTime msgID shmID [ semID ]\n");
		exit(0);
	}
	*workerId = atoi(argv[1]);
	*sleepTime = atoi(argv[2]); 
	*msgID = atoi(argv[3]);
	*shmID = atoi(argv[4]);
	if(argc == 6){
		*semID = atoi(argv[5]); 
	}
}